apiVersion: v1
kind: Secret
metadata:
  name: {{ include "deephealth-backend.fullname" . }}-secrets
  labels:
    app.kubernetes.io/name: {{ include "deephealth-backend.name" . }}-secrets
    helm.sh/chart: {{ include "deephealth-backend.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
type: Opaque
stringData:
  adminUsername: {{ .Values.backend.admin.username }}
  adminPassword: {{ include "deephealth-backend.admin.password" . | quote }}
  {{- if .Values.backend.admin.email }}
  adminEmail: {{ .Values.backend.admin.email | b64enc }}
  {{- end }}
  config: |-
    # Allow DEBUG mode. Don't run with debug turned on in production!
    DEBUG={{ .Values.global.debug }}

    # Set SECRET_KEY. Keep the secret key used in production secret!
    SECRET_KEY={{ include "deephealth-backend.djangoSecretKey" . }}

    # List of allowed hosts
    ALLOWED_HOSTS="localhost,127.0.0.1,{{- range .Values.ingress.hosts }},{{ .host }}{{- end }}{{- if .Values.backend.allowedHosts }},{{ .Values.backend.allowedHosts }}{{- end }}"

    # Cross-Origin Resource Sharing (CORS) whitelist
    CORS_ORIGIN_WHITELIST="{{- range .Values.ingress.hosts }},http://{{ .host }},https://{{ .host }}{{- end }}{{- if .Values.backend.corsOriginWhiteList }},{{ .Values.backend.corsOriginWhiteList }}{{- end }}"
    
    # Database connection settings
    # DATABASE_URL=sqlite:///my-local-sqlite.db # SQLite DB
    # DATABASE_URL=psql://{{ .Values.postgresql.postgresqlUsername }}:{{ .Values.postgresql.postgresqlPassword }}@{{ include "deephealth-backend.fullname" . }}-postgresql:{{ .Values.postgresql.service.port }}/{{ .Values.postgresql.postgresqlDatabase }}

    # Relative path for static resources
    STATIC_URL={{ include "deephealth-backend.static_files.url" . }}

    # Data directories
    TRAINING_DIR={{ .Values.persistence.training.path }}
    INFERENCE_DIR={{ .Values.persistence.inference.path }}
    DATASETS_DIR={{ .Values.persistence.datasets.path }}

    # RabbitMQ Credentials
    # see https://hub.docker.com/_/rabbitmq
    # RABBITMQ_BROKER_URL=amqp://{{ .Values.broker.rabbitmq.username }}:{{ .Values.broker.rabbitmq.password }}@{{ include "deephealth-backend.fullname" . }}-rabbitmq:{{ .Values.broker.service.port }}

    # Celery settings
    CELERY_ACCEPT_CONTENT={{ .Values.celery.acceptContent | quote }}
    CELERY_RESULT_BACKEND={{ .Values.celery.resultBackend | quote }}
    CELERY_TASK_SERIALIZER={{ .Values.celery.taskSerializer | quote }}