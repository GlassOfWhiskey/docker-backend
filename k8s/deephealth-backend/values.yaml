# Default values for deephealth-backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  debug: &debug True
  storageClass: default

replicaCount: 1

image:
  repository: 
  tag: latest
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

# Backend settings
backend:
  admin:
    username: admin
    password: admin
    #email: admin@domain.it

  service:
    type: ClusterIP
    port: 80
    containerPort: 8000

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: 

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    # To use GPU you need to install 
    # https://github.com/NVIDIA/k8s-device-plugin) 
    # on your k8s Cluster 
    # limits:
    #   nvidia.com/gpu: 2 # requesting 2 GPUs

  nodeSelector: {}

  tolerations: []

  affinity: {}


# Celery settings
celery:
  
  service:
    # type: ClusterIP
    # port: 80
    containerPort: 5432

  # ingress:
  #   enabled: true
  #   annotations:
  #     kubernetes.io/ingress.class: nginx
  #     # kubernetes.io/tls-acme: "true"
  #   hosts:
  #     - host: celery.backend.172.30.10.101.nip.io

  #   tls: []
  #   #  - secretName: chart-example-tls
  #   #    hosts:
  #   #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    # To use GPU you need to install 
    # https://github.com/NVIDIA/k8s-device-plugin) 
    # on your k8s Cluster 
    # limits:
    #   nvidia.com/gpu: 2 # requesting 2 GPUs

  nodeSelector: {}

  tolerations: []

  affinity: {}


# RabbitMQ settings. 
# all available options are available at https://github.com/bitnami/charts/tree/master/bitnami/rabbitmq
broker: &broker
  image:
    debug: *debug
  
  rabbitmq:
    username: user
    password: password
  
  service:
    port: 5672
  
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

# Copy broker properties as values of the subchart RabbitMQ
rabbitmq: *broker
