# Default values for deephealth-backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: "deephealth-backend"
fullnameOverride: ""

# Set Django secret
djangoSecret: ""

# Set data paths
dataPaths:
  datasets: 'data/datasets'
  training: 'data/training'
  inference: 'data/inference'

# global settings
global:
  debug: &debug True
  # persistence class
  storageClass: default
  # static files settings
  staticUrl: '/static/'
  staticPath: '/app/static/'
  # default pull policy for images
  imagePullPolicy: &imagePullPolicy "Always"

# Set external access to the services
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: backend.127.0.0.1.nip.io
      serviceName: deephealth-backend-proxy # service name without Release.Name prefix
      servicePort: 80

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# Backend settings
backend:
  admin:
    username: admin
    password: admin
    #email: admin@domain.it

  replicaCount: 1
  
  # number of Gunicorn workers
  workers: 3

  image: &backend_image
    repository: dhealth/backend
    tag: latest
    pullPolicy: *imagePullPolicy

  service:
    type: ClusterIP
    port: 80
    containerPort: 8000

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    # To use GPU you need to install 
    # https://github.com/NVIDIA/k8s-device-plugin) 
    # on your k8s Cluster 
    # limits:
    #   nvidia.com/gpu: 2 # requesting 2 GPUs

  nodeSelector: {}

  tolerations: []

  affinity: {}


# nginx settings
nginx:
  nameOverride: "deephealth-backend-nginx"

  image:
    repository: dhealth/backend-proxy
    tag: latest
    pullPolicy: *imagePullPolicy
    debug: *debug
  
  service:
    type: ClusterIP
    port: 80
    #httpsPort: 443

  serverBlockConfigMap: nginx-config

  ingress:
    # enabled: false
    # hostname: nginx.backend.172.30.10.101.nip.io
    # annotations:
    #   kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # hosts:
    #   - host: 
    #       name: pippo.backend.172.30.10.101.nip.io
    #       path: /

    tls: []
    # tls:
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

# Celery settings
celery:

  image: *backend_image
  
  service:
    # type: ClusterIP
    # port: 80
    containerPort: 5432

  # ingress:
  #   enabled: true
  #   annotations:
  #     kubernetes.io/ingress.class: nginx
  #     # kubernetes.io/tls-acme: "true"
  #   hosts:
  #     - host: celery.backend.172.30.10.101.nip.io

  #   tls: []
  #   #  - secretName: chart-example-tls
  #   #    hosts:
  #   #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    # To use GPU you need to install 
    # https://github.com/NVIDIA/k8s-device-plugin) 
    # on your k8s Cluster 
    # limits:
    #   nvidia.com/gpu: 2 # requesting 2 GPUs

  nodeSelector: {}

  tolerations: []

  affinity: {}


# RabbitMQ settings. You can find all the available settings 
# at https://github.com/bitnami/charts/tree/master/bitnami/rabbitmq
broker: &broker
  nameOverride: "deephealth-backend-rabbitmq"

  image:
    debug: *debug
    pullPolicy: *imagePullPolicy
  
  rabbitmq:
    username: user
    password: password
  
  service:
    port: 5672
  
  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

# Copy broker properties as values of the subchart RabbitMQ
rabbitmq: *broker


# PostgreSQL settings.
# You can find all the available settings at https://github.com/bitnami/charts/tree/master/bitnami/postgresql
postgresql:
  nameOverride: "deephealth-backend-postgresql"
  # DB
  postgresqlDatabase: db
  # credentials
  postgresqlUsername: user
  postgresqlPassword: password

  image:
    debug: *debug
    pullPolicy: *imagePullPolicy

  service:
    port: 5432

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}


# Debug console settings
console:
  enabled: *debug
  image:
    repository: busybox
    tag: latest
    pullPolicy: *imagePullPolicy
    debug: *debug

  replicaCount: 1
  
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
    # To use GPU you need to install 
    # https://github.com/NVIDIA/k8s-device-plugin) 
    # on your k8s Cluster 
    # limits:
    #   nvidia.com/gpu: 2 # requesting 2 GPUs

  nodeSelector: {}

  tolerations: []

  affinity: {}