# Allow DEBUG mode
DEBUG=True

# Django superuser credentials
ADMIN_USER=admin
ADMIN_PASSWORD=password
ADMIN_EMAIL=

# PostgreSQL
POSTGRESQL_USERNAME=user
POSTGRESQL_PASSWORD=password
POSTGRESQL_DATABASE=db

# RabbitMQ settings
RABBITMQ_DEFAULT_USER=user
RABBITMQ_DEFAULT_PASS=password

# Backend Settings
BACKEND_PORT=8000

# Set port used by Flower
FLOWER_PORT=5555

# Base iamge for building the Back-end image
DOCKER_LIBS_IMAGE=dhealth/pylibs:develop_build77

# Docker image name
DOCKER_BACKEND_IMAGE=dhealth/backend

# Set Docker Runtime: runc | nvidia
# The current implementation only support 'nvidia' runtime
# Notice that to use GPUs you need to use the 'nvidia'
# DOCKER_RUNTIME *and* use a GPU-enabled pylibs container image.
DOCKER_RUNTIME=runc #"nvidia"

# Set path to your local copy of the Back-end
#BACKEND_LOCAL_PATH="<ABSOLUTE_PATH_TO_BACKEND>"

# Django static
STATIC_URL=/backend/static/

# Comma separated allowed hosts
ALLOWED_HOSTS=localhost,127.0.0.1

# Comma separated CORS domains
CORS_ORIGIN_WHITELIST=http://localhost:4200

# Data directories
TRAINING_DIR=data/training
INFERENCE_DIR=data/inference
DATASETS_DIR=data/datasets

# Celery settings
CELERY_ACCEPT_CONTENT=json
CELERY_RESULT_BACKEND=db+sqlite:///results.sqlite
CELERY_TASK_SERIALIZER=json

